plugins {
  id 'vx.demo.application-conventions'
  id 'vx.demo.node-conventions'
}

dependencies {
  implementation project( ':app' )
  implementation project( ':time-service' )
  implementation project( ':weather-service' )
  implementation project( ':vx-demo-backoffice' )
  implementation project( ':password-check' )
  implementation project( ':rmi-vx-client' )
}

task verticles {
  group 'application'
  description 'Creates a list of verticle class names based on project dependencies'
  
  File f = file "$projectDir/src/main/resources/verticles.txt"
  
  inputs.files configurations.compileClasspath
  outputs.file f

  doFirst{
    if( !f.parentFile.exists() ) f.parentFile.mkdirs()
    f.createNewFile() 
  }
    
  doLast{
    List projNames = configurations.implementation.dependencies.findResults{
      it.dependencyProject.plugins.hasPlugin( 'java-library' ) ? null : "$it.name-${it.version}.jar".toString()
    }
    f.text = configurations.compileClasspath.findResults{ dep ->
      if( dep.name !in projNames ) return null
      String name, desc
      resources.text.fromArchiveEntry( dep, 'META-INF/MANIFEST.MF' ).asReader().splitEachLine( ': ' ){ parts ->
        switch( parts[ 0 ] ){
          case 'Main-Verticle': name = parts[ 1 ]; break
          case 'Description': desc = parts[ 1 ]; break
          case { desc && 1 == parts.size() }: desc += parts[ 0 ].trim(); break
        }
      }
      "$name >> $desc"
    }.join '\n'
  }
}

processResources.dependsOn verticles

shadowJar.dependsOn processIndex