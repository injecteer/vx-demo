plugins {
	id 'vx.demo.common-conventions'
	id 'application'
  id 'com.github.johnrengelman.shadow'
}

dependencies {
  implementation project( ':domain' )
}

jar {
  manifest {
    attributes 'Main-Class':'io.vertx.core.Starter', 'Main-Verticle':verticleName, Description:project.description
  }
}

String devJarName = "$project.name-$project.version-dev.jar"

task devJar( type:Jar ) {
  group 'build'
  description 'Builds a jar file with development mode content and settings'
  dependsOn classes
  archiveFileName = devJarName
  duplicatesStrategy = DuplicatesStrategy.EXCLUDE
  from sourceSets.main.output
  from{
    configurations.compileClasspath.findAll{ it.absolutePath.startsWith rootDir.absolutePath }.collect{ zipTree it }
  }
  manifest {
    attributes 'Main-Class':'io.vertx.core.Starter', 'Main-Verticle':verticleName
  }
}

shadowJar {
  duplicatesStrategy = DuplicatesStrategy.EXCLUDE
  
  manifest {
    attributes 'Main-Verticle':verticleName, 'Multi-Release':true
  }
  mergeServiceFiles {
    include 'META-INF/services/io.vertx.core.spi.VerticleFactory'
  }
}

applicationDefaultJvmArgs = [
//  '-DregisterWithAdmin=true',
  '-Djava.net.preferIPv4Stack=true', 
  '-Dfile.encoding=UTF-8',
  // hazelcast args for Java 9+
  '--add-modules', 'java.se', 
  '--add-exports', 'java.base/jdk.internal.ref=ALL-UNNAMED', 
  '--add-opens', 'java.base/java.lang=ALL-UNNAMED', 
  '--add-opens', 'java.base/java.nio=ALL-UNNAMED', 
  '--add-opens', 'java.base/sun.nio.ch=ALL-UNNAMED', 
  '--add-opens', 'java.management/sun.management=ALL-UNNAMED', 
  '--add-opens', 'jdk.management/com.sun.management.internal=ALL-UNNAMED'
]

run {
  dependsOn devJar
  classpath = configurations.runtimeClasspath.filter{ !it.absolutePath.startsWith( rootDir.absolutePath ) } + files( "$buildDir/libs/$devJarName" )
  mainClassName = 'io.vertx.core.Launcher'
  args 'run', verticleName, '-Dvertxweb.environment=dev', '-cluster'
//  jvmArgs '-Xdebug', '-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5022'
}

runShadow {
  args( *System.getenv( 'GRADLE_OPTS' )?.split( ' ' ), '-Dvertxweb.environment=prod', '-cluster' )
}